%!PS-Adobe-3.0 EPSF-3.0
%%Creator: (ImageMagick)
%%Title: (/tmp/BW_QRcode_card_1458075381.eps)
%%CreationDate: (Wed Mar 16 05:56:22 2016)
%%BoundingBox: 0 0 45 45
%%HiResBoundingBox: 0 0 45 45
%%DocumentData: Clean7Bit
%%LanguageLevel: 1
%%Pages: 1
%%EndComments

%%BeginDefaults
%%EndDefaults

%%BeginProlog
%
% Display a color image.  The image is displayed in color on
% Postscript viewers or printers that support color, otherwise
% it is displayed as grayscale.
%
/DirectClassPacket
{
  %
  % Get a DirectClass packet.
  %
  % Parameters:
  %   red.
  %   green.
  %   blue.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/DirectClassImage
{
  %
  % Display a DirectClass image.
  %
  systemdict /colorimage known
  {
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { DirectClassPacket } false 3 colorimage
  }
  {
    %
    % No colorimage operator;  convert to grayscale.
    %
    columns rows 8
    [
      columns 0 0
      rows neg 0 rows
    ]
    { GrayDirectClassPacket } image
  } ifelse
} bind def

/GrayDirectClassPacket
{
  %
  % Get a DirectClass packet;  convert to grayscale.
  %
  % Parameters:
  %   red
  %   green
  %   blue
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile color_packet readhexstring pop pop
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/GrayPseudoClassPacket
{
  %
  % Get a PseudoClass packet;  convert to grayscale.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  color_packet 0 get 0.299 mul
  color_packet 1 get 0.587 mul add
  color_packet 2 get 0.114 mul add
  cvi
  /gray_packet exch def
  compression 0 eq
  {
    /number_pixels 1 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add def
  } ifelse
  0 1 number_pixels 1 sub
  {
    pixels exch gray_packet put
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassPacket
{
  %
  % Get a PseudoClass packet.
  %
  % Parameters:
  %   index: index into the colormap.
  %   length: number of pixels minus one of this color (optional).
  %
  currentfile byte readhexstring pop 0 get
  /offset exch 3 mul def
  /color_packet colormap offset 3 getinterval def
  compression 0 eq
  {
    /number_pixels 3 def
  }
  {
    currentfile byte readhexstring pop 0 get
    /number_pixels exch 1 add 3 mul def
  } ifelse
  0 3 number_pixels 1 sub
  {
    pixels exch color_packet putinterval
  } for
  pixels 0 number_pixels getinterval
} bind def

/PseudoClassImage
{
  %
  % Display a PseudoClass image.
  %
  % Parameters:
  %   class: 0-PseudoClass or 1-Grayscale.
  %
  currentfile buffer readline pop
  token pop /class exch def pop
  class 0 gt
  {
    currentfile buffer readline pop
    token pop /depth exch def pop
    /grays columns 8 add depth sub depth mul 8 idiv string def
    columns rows depth
    [
      columns 0 0
      rows neg 0 rows
    ]
    { currentfile grays readhexstring pop } image
  }
  {
    %
    % Parameters:
    %   colors: number of colors in the colormap.
    %   colormap: red, green, blue color packets.
    %
    currentfile buffer readline pop
    token pop /colors exch def pop
    /colors colors 3 mul def
    /colormap colors string def
    currentfile colormap readhexstring pop pop
    systemdict /colorimage known
    {
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { PseudoClassPacket } false 3 colorimage
    }
    {
      %
      % No colorimage operator;  convert to grayscale.
      %
      columns rows 8
      [
        columns 0 0
        rows neg 0 rows
      ]
      { GrayPseudoClassPacket } image
    } ifelse
  } ifelse
} bind def

/DisplayImage
{
  %
  % Display a DirectClass or PseudoClass image.
  %
  % Parameters:
  %   x & y translation.
  %   x & y scale.
  %   label pointsize.
  %   image label.
  %   image columns & rows.
  %   class: 0-DirectClass or 1-PseudoClass.
  %   compression: 0-none or 1-RunlengthEncoded.
  %   hex color packets.
  %
  gsave
  /buffer 512 string def
  /byte 1 string def
  /color_packet 3 string def
  /pixels 768 string def

  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  x y translate
  currentfile buffer readline pop
  token pop /x exch def
  token pop /y exch def pop
  currentfile buffer readline pop
  token pop /pointsize exch def pop
  /Times-Roman findfont pointsize scalefont setfont
  x y scale
  currentfile buffer readline pop
  token pop /columns exch def
  token pop /rows exch def pop
  currentfile buffer readline pop
  token pop /class exch def pop
  currentfile buffer readline pop
  token pop /compression exch def pop
  class 0 gt { PseudoClassImage } { DirectClassImage } ifelse
  grestore
} bind def
%%EndProlog
%%Page:  1 1
%%PageBoundingBox: 0 0 45 45
userdict begin
DisplayImage
0 0
45 45
12.000000
45 45
1
1
1
8
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFF00000000000000FF00000000FF000000FFFFFFFF0000FFFFFFFF0000FFFF00
000000000000FFFFFFFFFFFFFFFF00FFFFFFFFFF00FFFFFFFF000000FFFFFFFF00000000
FFFFFF0000FF00FF00FFFFFFFFFF00FFFFFFFFFFFFFFFF00FF000000FF00FFFF00FF00FF
0000FF00FFFF00FF0000FF0000FFFF00FF00FF000000FF00FFFFFFFFFFFFFFFF00FF0000
00FF00FFFFFF0000FFFFFF00000000FFFF00FFFF00FFFFFF00FF00FF000000FF00FFFFFF
FFFFFFFFFF00FF000000FF00FFFFFF000000000000FFFFFF000000FFFFFFFF000000FF00
FF000000FF00FFFFFFFFFFFFFFFF00FFFFFFFFFF00FFFF00FF00FF0000FFFF0000FFFFFF
FF0000FFFFFFFFFF00FFFFFFFFFF00FFFFFFFFFFFFFFFF00000000000000FF00FF00FF00
FF00FF00FF00FF00FF00FF00FF00FF00FF00000000000000FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFF0000FFFF000000FFFFFFFF0000FF00FF0000FF00FFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFF0000FF0000FF00FFFF00FFFF00000000FF00000000000000000000FFFFFF00
FFFFFFFFFF00FFFFFFFFFFFFFFFFFF00000000FFFF0000FF00FFFFFF000000FFFF000000
0000FFFFFF0000FFFF0000FFFF00FFFFFFFFFFFFFFFFFF00FFFFFFFFFF0000000000FF00
FFFF00FFFFFFFF00FFFF00FF00000000FFFF000000000000FFFFFFFFFFFFFFFF00000000
FFFFFF000000FFFFFFFFFF00FF00FF00FFFF00FF00FFFF00FFFFFFFF00000000FFFFFFFF
FFFFFFFFFF00FFFF00FF00000000FFFFFFFFFF00FF00FF0000FF00FF00FF00FF0000FF00
FFFFFF00FFFFFFFFFFFFFFFFFFFF000000000000FF00FFFFFFFF00FFFF00FFFFFFFF00FF
00FFFF00FFFF0000FFFF0000FFFF00FFFFFFFFFFFFFFFF0000FFFFFF0000FFFFFF00FFFF
FFFF0000FFFF00FF00FFFFFFFFFF00000000000000FF0000FFFFFFFFFFFFFFFFFFFF0000
00FFFFFF000000FF00FF000000FF00FF00FF0000FFFFFF0000000000FF00000000FFFFFF
FFFFFFFFFF0000FFFF000000FF00FF000000FFFF0000FF00FFFF00000000FFFF0000FF00
FFFF00FF00FFFFFFFFFFFFFFFFFFFF00FF0000FFFF0000FF0000FFFF00000000FF00FFFF
0000FFFFFFFFFF00FF00FFFF000000FFFFFFFFFFFFFFFF00FF0000FFFF0000FF0000FF00
FFFF000000FF00FF00FF00FF00FF00FFFFFFFF00FFFFFF00FFFFFFFFFFFFFFFF00FF00FF
FFFFFFFFFF000000FF000000FFFFFF0000FF00FF0000FF0000FFFF00FF00FF00FFFFFFFF
FFFFFFFFFFFFFF00FF000000FFFFFFFF00FF0000FFFFFF00000000FF00000000FF000000
000000000000FFFFFFFFFFFFFFFF00FF00FF00FFFFFF0000FFFF00FF0000000000000000
00FFFFFFFFFFFFFFFF0000FF00FF00FFFFFFFFFFFFFFFF00FFFFFFFF000000FFFF0000FF
000000FFFF00FF0000000000FFFF00FFFF000000FFFFFF00FFFFFFFFFFFFFFFF00FFFFFF
00FFFFFFFF00FF0000FF0000FF0000FFFFFF00FF00FFFF0000FFFF00000000FF00FFFFFF
FFFFFFFFFFFF00000000FF0000000000000000FFFF0000FF00FFFF00FFFFFF00FF000000
0000FF00FF00FFFFFFFFFFFFFFFFFF00FFFFFF00FFFFFFFFFFFFFF0000FF00FFFFFF0000
000000FFFFFFFFFFFFFF00FFFFFF00FFFFFFFFFFFFFFFFFFFFFF00000000FFFFFF000000
00FF00FF00FF00FFFF00FF00000000FFFF00000000FF0000FFFFFFFFFFFFFFFFFF00FF00
00FFFF00FF00FF00FFFFFF00FFFF000000FFFFFF00FFFFFFFFFF00FFFF0000FFFFFFFFFF
FFFFFFFFFFFF0000FF0000000000FFFFFFFFFFFFFFFF00FF00FF0000FFFF00FFFF000000
000000FF0000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000FF0000FF00FFFF000000FFFF
00FF00FF00FF00FFFFFF0000000000FFFFFFFFFFFFFFFF00000000000000FFFFFFFF00FF
FF0000FF00FF0000FF0000FF00FFFF00FF00FF000000FF00FFFFFFFFFFFFFFFF00FFFFFF
FFFF00FFFFFFFFFF000000FFFFFFFF00FFFF00FFFF00FF0000FFFFFF00FFFF00FFFFFFFF
FFFFFFFFFF00FF000000FF00FF00FFFFFF000000FF00FFFFFFFF00FF0000FF0000000000
0000000000FFFFFFFFFFFFFFFFFF00FF000000FF00FF00FFFFFFFFFF00FFFFFFFFFFFFFF
000000FFFF00FF000000FFFFFF0000FFFFFFFFFFFFFFFF00FF000000FF00FFFFFF00FF00
FFFF0000FF00FF0000000000FFFFFF000000FF000000FF00FFFFFFFFFFFFFFFF00FFFFFF
FFFF00FF0000FFFFFFFFFF00000000FF00FFFFFFFFFFFFFFFFFF00FF0000000000FFFFFF
FFFFFFFFFF00000000000000FF000000FF00000000FF00FFFF0000FF0000FFFFFF00FF00
FFFF0000FF00FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
FFFFFFFFFFFFFFFFFFFFend
%%PageTrailer
%%Trailer
%%EOF
